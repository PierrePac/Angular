{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class uploadService {}\nuploadService.ɵfac = function uploadService_Factory(t) {\n  return new (t || uploadService)();\n};\nuploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: uploadService,\n  factory: uploadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAWA,OAAM,MAAOA,aAAa;AAAbA,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAC,SAAbD,aAAa;EAAAE,YAFV;AAAM","names":["uploadService","factory","providedIn"],"sourceRoot":"","sources":["/home/pierre/Documents/GitHub/CDA_fil_rouge/Angular/green-village/src/app/services/upload.servive.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable, switchMap } from \"rxjs\";\nimport { ResponsePhoto } from \"../interface/reponsePhoto.interface\";\nimport { Produit } from \"../models/produit.model\";\nimport { produitsService } from \"./produits.service\";\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class uploadService implements ResponsePhoto, {\n    \n    constructor(private httpClient: HttpClient,\n                private produitService: produitsService,\n                \n                ){}\n\n    nom!: string;\n    \n    public uploadFile(file: File): Observable<ResponsePhoto> {\n        let formParams = new FormData();\n        formParams.append('file', file);\n        console.log(formParams);\n        return this.httpClient.post<any>(`http://127.0.0.1:8000/api/post_image`, formParams);\n    }\n\n    public uploadProduit(formValue: {refProduit: string, shortLibel: string, longLibel: string, idCategorie: number, photo: string[], prixHt: number, slug: string}, images: string[]): Observable<Produit>{\n        return this.produitService.getAllProduit().pipe(\n            map(produits => [...produits].sort((a,b)=>a.id - b.id)),\n            map(sortedProduits => sortedProduits[sortedProduits.length - 1]),\n            map(previousProduits => ({\n                ...formValue,\n                \n                photo: images,\n            })),\n            switchMap(newProduit => this.httpClient.post<Produit>('http://127.0.0.1:8000/api/produits', newProduit))\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}