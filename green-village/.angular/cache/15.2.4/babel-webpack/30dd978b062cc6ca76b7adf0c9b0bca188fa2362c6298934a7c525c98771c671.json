{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { delay } from 'rxjs';\nlet ProduitComponent = class ProduitComponent {\n  constructor(produitService, route, categoriesService, formbuilder, uploadService) {\n    this.produitService = produitService;\n    this.route = route;\n    this.categoriesService = categoriesService;\n    this.formbuilder = formbuilder;\n    this.uploadService = uploadService;\n  }\n  ngOnInit() {\n    const produitId = +this.route.snapshot.params['id'];\n    this.produit$ = this.produitService.getOneProduit(produitId);\n    this.otherPhotos$ = this.produitService.getOtherPictureOfOneProduit(produitId);\n    this.majorPhoto$ = this.produitService.getMajorPictureOneProduit(produitId);\n    this.categories$ = this.categoriesService.getAllSousCategories();\n    this.produitForm = this.formbuilder.group({\n      refProduit: [null, Validators.required],\n      produitForm: [null, Validators.required],\n      shortLibel: [null, Validators.required],\n      longLibel: [null, Validators.required],\n      idCategorie: [null, Validators.required],\n      prixHt: [null, Validators.required]\n    });\n    this.photoForm = this.formbuilder.group({\n      photo: [null, Validators.required]\n    });\n  }\n  onFilechange(event) {\n    this.file = event.target.files[0];\n  }\n  upload() {\n    const produitId = +this.route.snapshot.params['id'];\n    if (this.file) {\n      this.uploadService.uploadFile(this.file).subscribe(response => {\n        this.uploadService.uploadPhoto(response.nom, produitId).pipe(delay(2000)).subscribe();\n        this.ngOnInit();\n      });\n    } else {\n      alert(\"please select a file first\");\n    }\n  }\n  deletePicture() {}\n};\n__decorate([Input()], ProduitComponent.prototype, \"produit\", void 0);\n__decorate([Input()], ProduitComponent.prototype, \"photo\", void 0);\nProduitComponent = __decorate([Component({\n  selector: 'app-produit',\n  templateUrl: './produit.component.html',\n  styleUrls: ['./produit.component.scss']\n})], ProduitComponent);\nexport { ProduitComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AACxD,SAAiCC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,KAAK,QAAoB,MAAM;AAcjC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAgBzBC,YAAoBC,cAA+B,EAC/BC,KAAqB,EACrBC,iBAAoC,EACpCC,WAAwB,EACxBC,aAA4B;IAJ5B,mBAAc,GAAdJ,cAAc;IACd,UAAK,GAALC,KAAK;IACL,sBAAiB,GAAjBC,iBAAiB;IACjB,gBAAW,GAAXC,WAAW;IACX,kBAAa,GAAbC,aAAa;EACnB;EAEdC,QAAQ;IACN,MAAMC,SAAS,GAAG,CAAC,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACnD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACT,cAAc,CAACU,aAAa,CAACJ,SAAS,CAAC;IAC5D,IAAI,CAACK,YAAY,GAAG,IAAI,CAACX,cAAc,CAACY,2BAA2B,CAACN,SAAS,CAAC;IAC9E,IAAI,CAACO,WAAW,GAAG,IAAI,CAACb,cAAc,CAACc,yBAAyB,CAACR,SAAS,CAAC;IAC3E,IAAI,CAACS,WAAW,GAAG,IAAI,CAACb,iBAAiB,CAACc,oBAAoB,EAAE;IAEhE,IAAI,CAACC,WAAW,GAAG,IAAI,CAACd,WAAW,CAACe,KAAK,CAAC;MACxCC,UAAU,EAAE,CAAC,IAAI,EAAEvB,UAAU,CAACwB,QAAQ,CAAC;MACvCH,WAAW,EAAE,CAAC,IAAI,EAAErB,UAAU,CAACwB,QAAQ,CAAC;MACxCC,UAAU,EAAE,CAAC,IAAI,EAAEzB,UAAU,CAACwB,QAAQ,CAAC;MACvCE,SAAS,EAAE,CAAC,IAAI,EAAE1B,UAAU,CAACwB,QAAQ,CAAC;MACtCG,WAAW,EAAE,CAAC,IAAI,EAAE3B,UAAU,CAACwB,QAAQ,CAAC;MACxCI,MAAM,EAAE,CAAC,IAAI,EAAE5B,UAAU,CAACwB,QAAQ;KACnC,CAAC;IACF,IAAI,CAACK,SAAS,GAAG,IAAI,CAACtB,WAAW,CAACe,KAAK,CAAC;MACtCQ,KAAK,EAAE,CAAC,IAAI,EAAE9B,UAAU,CAACwB,QAAQ;KAClC,CAAC;EACJ;EAEAO,YAAY,CAACC,KAAU;IACrB,IAAI,CAACC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACnC;EAEAC,MAAM;IACJ,MAAM1B,SAAS,GAAG,CAAC,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACnD,IAAI,IAAI,CAACqB,IAAI,EAAE;MACb,IAAI,CAACzB,aAAa,CAAC6B,UAAU,CAAC,IAAI,CAACJ,IAAI,CAAC,CAACK,SAAS,CAAEC,QAAuB,IAAI;QAC7E,IAAI,CAAC/B,aAAa,CAACgC,WAAW,CAACD,QAAQ,CAACE,GAAG,EAAE/B,SAAS,CAAC,CAACgC,IAAI,CAACzC,KAAK,CAAC,IAAI,CAAC,CAAC,CAACqC,SAAS,EAAE;QACrF,IAAI,CAAC7B,QAAQ,EAAE;MACjB,CAAC,CAAC;KACH,MAAM;MACLkC,KAAK,CAAC,4BAA4B,CAAC;;EAEvC;EACAC,aAAa,IAEb;CAEA;AA7DOC,YAAR9C,KAAK,EAAE,iDAAmB;AAClB8C,YAAR9C,KAAK,EAAE,+CAAe;AAFZG,gBAAgB,eAL5BJ,SAAS,CAAC;EACTgD,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW9C,gBAAgB,CA8DzB;SA9DSA,gBAAgB","names":["Component","Input","Validators","delay","ProduitComponent","constructor","produitService","route","categoriesService","formbuilder","uploadService","ngOnInit","produitId","snapshot","params","produit$","getOneProduit","otherPhotos$","getOtherPictureOfOneProduit","majorPhoto$","getMajorPictureOneProduit","categories$","getAllSousCategories","produitForm","group","refProduit","required","shortLibel","longLibel","idCategorie","prixHt","photoForm","photo","onFilechange","event","file","target","files","upload","uploadFile","subscribe","response","uploadPhoto","nom","pipe","alert","deletePicture","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/pierre/Documents/GitHub/CDA_fil_rouge/Angular/green-village/src/app/produit/produit.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { delay, Observable } from 'rxjs';\nimport { ResponsePhoto } from '../interface/reponsePhoto.interface';\nimport { Categorie } from '../models/categorie.model';\nimport { Photo } from '../models/photo.model';\nimport { Produit } from '../models/produit.model';\nimport { CategoriesService } from '../services/categories.service';\nimport { produitsService } from '../services/produits.service';\nimport { uploadService } from '../services/upload.servive';\n\n@Component({\n  selector: 'app-produit',\n  templateUrl: './produit.component.html',\n  styleUrls: ['./produit.component.scss']\n})\nexport class ProduitComponent implements OnInit {\n  @Input() produit!: Produit;\n  @Input() photo!: Photo;\n\n\n  categorie!: Categorie;\n  produits!: Produit;\n  produit$!: Observable<Produit>;\n  majorPhoto$!: Observable<Photo[]>;\n  otherPhotos$!: Observable<Photo[]>;\n  categories$!: Observable<Categorie[]>\n  file!: File;\n  produitForm!: FormGroup;\n  photoForm!: FormGroup;\n\n  \n    constructor(private produitService: produitsService,\n                private route: ActivatedRoute,\n                private categoriesService: CategoriesService,\n                private formbuilder: FormBuilder,\n                private uploadService: uploadService,\n                ){}\n  \n    ngOnInit(){\n      const produitId = +this.route.snapshot.params['id'];\n      this.produit$ = this.produitService.getOneProduit(produitId);\n      this.otherPhotos$ = this.produitService.getOtherPictureOfOneProduit(produitId);\n      this.majorPhoto$ = this.produitService.getMajorPictureOneProduit(produitId);\n      this.categories$ = this.categoriesService.getAllSousCategories();\n\n      this.produitForm = this.formbuilder.group({\n        refProduit: [null, Validators.required],\n        produitForm: [null, Validators.required],\n        shortLibel: [null, Validators.required],\n        longLibel: [null, Validators.required],\n        idCategorie: [null, Validators.required],\n        prixHt: [null, Validators.required],\n      });\n      this.photoForm = this.formbuilder.group({\n        photo: [null, Validators.required]\n      });\n    }\n\n    onFilechange(event: any) {\n      this.file = event.target.files[0];\n    }\n    \n    upload() {\n      const produitId = +this.route.snapshot.params['id'];\n      if (this.file) {\n        this.uploadService.uploadFile(this.file).subscribe((response: ResponsePhoto) => {\n          this.uploadService.uploadPhoto(response.nom, produitId).pipe(delay(2000)).subscribe();\n          this.ngOnInit();\n        });\n      } else {\n        alert(\"please select a file first\")\n      }\n    }\n    deletePicture(){\n      \n    }\n\n   }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}