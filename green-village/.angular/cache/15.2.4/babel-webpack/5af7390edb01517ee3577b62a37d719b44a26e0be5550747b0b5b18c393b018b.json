{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./produits.service\";\nexport class uploadService {\n  constructor(httpClient, produitService) {\n    this.httpClient = httpClient;\n    this.produitService = produitService;\n  }\n  uploadFile(file) {\n    let formParams = new FormData();\n    formParams.append('file', file);\n    console.log(formParams);\n    return this.httpClient.post(`http://127.0.0.1:8000/api/post_image`, formParams);\n  }\n  uploadProduit(formValue, images) {\n    return this.produitService.getAllProduit().pipe(map(produits => [...produits].sort((a, b) => a.id - b.id)));\n  }\n}\nuploadService.ɵfac = function uploadService_Factory(t) {\n  return new (t || uploadService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.produitsService));\n};\nuploadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: uploadService,\n  factory: uploadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAoB,MAAM;;;;AAQtC,OAAM,MAAOC,aAAa;EAEtBC,YAAoBC,UAAsB,EACtBC,cAA+B;IAD/B,eAAU,GAAVD,UAAU;IACV,mBAAc,GAAdC,cAAc;EACpB;EAIPC,UAAU,CAACC,IAAU;IACxB,IAAIC,UAAU,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,UAAU,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC/BI,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;IACvB,OAAO,IAAI,CAACJ,UAAU,CAACS,IAAI,CAAM,sCAAsC,EAAEL,UAAU,CAAC;EACxF;EAEOM,aAAa,CAACC,SAA4H,EAAEC,MAAgB;IAC/J,OAAO,IAAI,CAACX,cAAc,CAACY,aAAa,EAAE,CAACC,IAAI,CAC3CjB,GAAG,CAACkB,QAAQ,IAAI,CAAC,GAAGA,QAAQ,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAGD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,CAAC,CAAC,CAC1D;EAEL;;AApBSrB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAsB,SAAbtB,aAAa;EAAAuB,YAFV;AAAM","names":["map","uploadService","constructor","httpClient","produitService","uploadFile","file","formParams","FormData","append","console","log","post","uploadProduit","formValue","images","getAllProduit","pipe","produits","sort","a","b","id","factory","providedIn"],"sourceRoot":"","sources":["/home/pierre/Documents/GitHub/CDA_fil_rouge/Angular/green-village/src/app/services/upload.servive.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { ResponsePhoto } from \"../interface/reponsePhoto.interface\";\nimport { Produit } from \"../models/produit.model\";\nimport { produitsService } from \"./produits.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class uploadService implements ResponsePhoto{\n    \n    constructor(private httpClient: HttpClient,\n                private produitService: produitsService,\n                ){}\n\n    nom!: string;\n    \n    public uploadFile(file: File): Observable<ResponsePhoto> {\n        let formParams = new FormData();\n        formParams.append('file', file);\n        console.log(formParams);\n        return this.httpClient.post<any>(`http://127.0.0.1:8000/api/post_image`, formParams);\n    }\n\n    public uploadProduit(formValue: {refProduit: string, shortLibel: string, longLabel: string, idCategorie: number, photo: string[], prixHt: number}, images: string[]): Observable<Produit>{\n        return this.produitService.getAllProduit().pipe(\n            map(produits => [...produits].sort((a,b)=>a.id - b.id))\n        )\n\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}