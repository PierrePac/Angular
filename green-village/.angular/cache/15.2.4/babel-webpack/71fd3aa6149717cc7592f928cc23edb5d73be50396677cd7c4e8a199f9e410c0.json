{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nlet AuthService = class AuthService {\n  constructor(httpC) {\n    this.httpC = httpC;\n  }\n  getToken(email, password) {}\n};\nAuthService = __decorate([Injectable({\n  providedIn: \"root\"\n})], AuthService);\nexport { AuthService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEpBC,YAAoBC,KAAK;IAAL,UAAK,GAALA,KAAK;EAAG;EAI5BC,QAAQ,CAACC,KAAa,EAAEC,QAAgB,GAExC;CACH;AATYL,WAAW,eAHvBD,UAAU,CAAC;EACRO,UAAU,EAAE;CACf,CAAC,GACWN,WAAW,CASvB;SATYA,WAAW","names":["Injectable","AuthService","constructor","httpC","getToken","email","password","providedIn"],"sourceRoot":"","sources":["/home/pierre/Documents/GitHub/CDA_fil_rouge/Angular/green-village/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ReponseToken } from \"../interface/reponseToken.interface\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuthService{\n\n    constructor(private httpC) {}\n\n    private Token!: string;\n\n    getToken(email: string, password: string):Observable<ReponseToken>{\n        \n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}