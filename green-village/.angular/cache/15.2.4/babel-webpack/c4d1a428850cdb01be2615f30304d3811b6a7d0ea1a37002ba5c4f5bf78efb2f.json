{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  authentification(formInfo) {\n    return this.httpClient.post('http://127.0.0.1:8000/auth', formInfo).subscribe(reponse => {\n      this.Token = reponse.token;\n      this.Refresh_Tokent = reponse.refresh_token;\n    });\n  }\n  getToken() {\n    return this.Token;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEpBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EACf;EAKfC,gBAAgB,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAe,4BAA4B,EAAED,QAAQ,CAAC,CAACE,SAAS,CAAEC,OAAqB,IAAI;MAClH,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,KAAK;MAC1B,IAAI,CAACC,cAAc,GAAGH,OAAO,CAACI,aAAa;IAC/C,CAAC,CAAC;EAEN;EAEAC,QAAQ;IACJ,OAAO,IAAI,CAACJ,KAAK;EACrB;;AAlBSR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFR;AAAM","names":["AuthService","constructor","httpClient","authentification","formInfo","post","subscribe","reponse","Token","token","Refresh_Tokent","refresh_token","getToken","factory","providedIn"],"sourceRoot":"","sources":["/home/pierre/Documents/GitHub/CDA_fil_rouge/Angular/green-village/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ReponseToken } from \"../interface/reponseToken.interface\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuthService{\n\n    constructor(private httpClient: HttpClient,\n                ) {}\n\n    private Token!: string;\n    private Refresh_Tokent!: string;\n\n    authentification(formInfo: Object): Observable<ReponseToken> {\n        return this.httpClient.post<ReponseToken>('http://127.0.0.1:8000/auth', formInfo).subscribe((reponse: ReponseToken) => {\n            this.Token = reponse.token;\n            this.Refresh_Tokent = reponse.refresh_token;\n        })\n\n    }\n\n    getToken(){\n        return this.Token\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}